const m="modulepreload",p=function(i){return"/"+i},u={},v=function(i,c,f){let a=Promise.resolve();if(c&&c.length>0){const r=document.getElementsByTagName("link"),n=document.querySelector("meta[property=csp-nonce]"),d=n?.nonce||n?.getAttribute("nonce");a=Promise.all(c.map(e=>{if(e=p(e),e in u)return;u[e]=!0;const o=e.endsWith(".css"),h=o?'[rel="stylesheet"]':"";if(f)for(let l=r.length-1;l>=0;l--){const s=r[l];if(s.href===e&&(!o||s.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${h}`))return;const t=document.createElement("link");if(t.rel=o?"stylesheet":m,o||(t.as="script",t.crossOrigin=""),t.href=e,d&&t.setAttribute("nonce",d),document.head.appendChild(t),o)return new Promise((l,s)=>{t.addEventListener("load",l),t.addEventListener("error",()=>s(new Error(`Unable to preload CSS for ${e}`)))})}))}return a.then(()=>i()).catch(r=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=r,window.dispatchEvent(n),!n.defaultPrevented)throw r})};export{v as _};

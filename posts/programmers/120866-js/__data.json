{"type":"data","nodes":[null,{"type":"data","data":[{"title":1,"summary":2,"formattedDate":3,"content":4,"tags":5},"🏅 프로그래머스 120866 : 안전지대 - Javascript","프로그래머스 120866 : 안전지대 문제를 Javascript로 풀이한 내용입니다.","2023-03-04","\u003Ch2 >문제 설명\u003C/h2> \u003Cul >\u003Cli>출처: \u003Ca href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120866\" rel=\"noopener noreferrer\" target=\"_blank\">프로그래머스 120866 : 안전지대\u003C/a>\u003C/li>\u003C/ul> \u003Cp >다음 그림과 같이 지뢰가 있는 지역과 지뢰에 인접한 위, 아래, 좌, 우 대각선 칸을 모두 위험지역으로 분류합니다.\u003C/p> \u003Cp >\u003Cstrong>\u003Cimg src=\"120866-description.png\" alt=\"description.png\">\u003C/strong>\u003C/p> \u003Cp >지뢰는 2차원 배열 board에 1로 표시되어 있고 board에는 지뢰가 매설 된 지역 1과, 지뢰가 없는 지역 0만 존재합니다.\u003C/p> \u003Cp >지뢰가 매설된 지역의 지도 board가 매개변수로 주어질 때, 안전한 지역의 칸 수를 return하도록 solution 함수를 완성해주세요.\u003C/p> \u003Chr> \u003Ch2 >제한사항\u003C/h2> \u003Cul>\u003Cli>board는 \u003Cspan class=\"math math-inline\">\u003C!-- HTML_TAG_START -->\u003Cspan class=\"katex\">\u003Cspan class=\"katex-mathml\">\u003Cmath xmlns=\"http://www.w3.org/1998/Math/MathML\">\u003Csemantics>\u003Cmrow>\u003Cmi>n\u003C/mi>\u003Cmo>∗\u003C/mo>\u003Cmi>n\u003C/mi>\u003C/mrow>\u003Cannotation encoding=\"application/x-tex\">n * n\u003C/annotation>\u003C/semantics>\u003C/math>\u003C/span>\u003Cspan class=\"katex-html\" aria-hidden=\"true\">\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:0.4653em;\">\u003C/span>\u003Cspan class=\"mord mathnormal\">n\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003Cspan class=\"mbin\">∗\u003C/span>\u003Cspan class=\"mspace\" style=\"margin-right:0.2222em;\">\u003C/span>\u003C/span>\u003Cspan class=\"base\">\u003Cspan class=\"strut\" style=\"height:0.4306em;\">\u003C/span>\u003Cspan class=\"mord mathnormal\">n\u003C/span>\u003C/span>\u003C/span>\u003C/span>\u003C!-- HTML_TAG_END -->\u003C/span> 배열입니다.\u003C/li> \u003Cli >1 ≤ n ≤ 100\u003C/li> \u003Cli >지뢰는 1로 표시되어 있습니다.\u003C/li> \u003Cli >board에는 지뢰가 있는 지역 1과 지뢰가 없는 지역 0만 존재합니다.\u003C/li>\u003C/ul> \u003Chr> \u003Ch2 >입출력 예\u003C/h2> \u003Ctable >\u003Cthead>\u003Ctr>\u003Cth align=\"left\">board\u003C/th> \u003Cth align=\"left\">result\u003C/th>\u003C/tr>\u003C/thead> \u003Ctbody>\u003Ctr>\u003Ctd align=\"left\">[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 0, 0]]\u003C/td> \u003Ctd align=\"left\">16\u003C/td>\u003C/tr> \u003Ctr>\u003Ctd align=\"left\">[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 1, 0], [0, 0, 0, 0, 0]]\u003C/td> \u003Ctd align=\"left\">13\u003C/td>\u003C/tr> \u003Ctr>\u003Ctd align=\"left\">[[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]]\u003C/td> \u003Ctd align=\"left\">0\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table> \u003Cul >\u003Cli>\u003Cp>예제 #1\u003Cbr>\n(3, 2)에 지뢰가 있으므로 지뢰가 있는 지역과 지뢰와 인접한 위, 아래, 좌, 우, 대각선 총 8칸은 위험지역입니다. 따라서 16을 return합니다.\u003C/p>\u003C/li> \u003Cli>\u003Cp>예제 #2\u003Cbr>\n(3, 2), (3, 3)에 지뢰가 있으므로 지뢰가 있는 지역과 지뢰와 인접한 위, 아래, 좌, 우, 대각선은 위험지역입니다. 따라서 위험지역을 제외한 칸 수 13을 return합니다.\u003C/p>\u003C/li> \u003Cli>\u003Cp>예제 #2\u003Cbr>\n모든 지역에 지뢰가 있으므로 안전지역은 없습니다. 따라서 0을 return합니다.\u003C/p>\u003C/li>\u003C/ul> \u003Chr> \u003Ch2 >풀이 과정\u003C/h2> \u003Cp >먼저 주어진 2차원 배열에서 지뢰가 매설 된 지역 주변을 안전한 지역을 위험지역으로 바꿉니다.\u003C/p> \u003Cul >\u003Cli>안전한 지역은 0, 지뢰가 매설 된 지역은 1로 표현되기 때문에 위험지역을 2로 표현했습니다.\u003C/li>\u003C/ul> \u003Cp >그 후 남은 안전지역의 수를 반환합니다.\u003C/p> \u003Cpre class=\"language-javascript\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-javascript\">\u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token constant\">SAFE\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token comment\">//안전한 지역\u003C/span>\n\u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token constant\">BOOM\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token comment\">//지뢰가 매설 된 지역\u003C/span>\n\u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token constant\">WARN\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token number\">2\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token comment\">//위험지역\u003C/span>\n\n\u003Cspan class=\"token keyword\">function\u003C/span> \u003Cspan class=\"token function\">solution\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">board\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n  \u003Cspan class=\"token comment\">//board는 n*n의 배열이기 때문에 n을 구함\u003C/span>\n  \u003Cspan class=\"token keyword\">const\u003C/span> n \u003Cspan class=\"token operator\">=\u003C/span> board\u003Cspan class=\"token punctuation\">.\u003C/span>length\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n  \u003Cspan class=\"token comment\">//주어진 지역과 인접한 안전한 지역을 위험지역으로 변경하는 함수\u003C/span>\n  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">markWarn\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">x\u003Cspan class=\"token punctuation\">,\u003C/span> y\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \u003Cspan class=\"token comment\">//board를 벗어나지 않는 탐색 범위를 반환하는 함수\u003C/span>\n    \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">range\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">k\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>Math\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">max\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> k \u003Cspan class=\"token operator\">-\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> k\u003Cspan class=\"token punctuation\">,\u003C/span> Math\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">min\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>n \u003Cspan class=\"token operator\">-\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> k \u003Cspan class=\"token operator\">+\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n    \u003Cspan class=\"token comment\">//주어진 x, y로 구한 범위 내의 안전한 지역을 위험 지역으로 변경\u003C/span>\n    \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">const\u003C/span> ry \u003Cspan class=\"token keyword\">of\u003C/span> \u003Cspan class=\"token function\">range\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>y\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n      \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">const\u003C/span> rx \u003Cspan class=\"token keyword\">of\u003C/span> \u003Cspan class=\"token function\">range\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>x\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n        \u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>board\u003Cspan class=\"token punctuation\">[\u003C/span>ry\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>rx\u003Cspan class=\"token punctuation\">]\u003C/span> \u003Cspan class=\"token operator\">===\u003C/span> \u003Cspan class=\"token constant\">SAFE\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n          board\u003Cspan class=\"token punctuation\">[\u003C/span>ry\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>rx\u003Cspan class=\"token punctuation\">]\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token constant\">WARN\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n        \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n      \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n    \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n  \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n  \u003Cspan class=\"token comment\">//모든 요소를 순회하여 위험지역을 표시\u003C/span>\n  \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">let\u003C/span> y \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> y \u003Cspan class=\"token operator\">&lt;\u003C/span> n\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token operator\">++\u003C/span>y\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">let\u003C/span> x \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> x \u003Cspan class=\"token operator\">&lt;\u003C/span> n\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token operator\">++\u003C/span>x\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n      \u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>board\u003Cspan class=\"token punctuation\">[\u003C/span>y\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>x\u003Cspan class=\"token punctuation\">]\u003C/span> \u003Cspan class=\"token operator\">===\u003C/span> \u003Cspan class=\"token constant\">BOOM\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n        \u003Cspan class=\"token function\">markWarn\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>x\u003Cspan class=\"token punctuation\">,\u003C/span> y\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n      \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n    \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n  \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n  \u003Cspan class=\"token comment\">//보드를 1차원 배열로 바꾸고, 안전한 지역의 수를 구해 반환\u003C/span>\n  \u003Cspan class=\"token keyword\">return\u003C/span> board\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">flat\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">filter\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">el\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> el \u003Cspan class=\"token operator\">===\u003C/span> \u003Cspan class=\"token constant\">SAFE\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>length\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Chr> \u003Ch3 >개선\u003C/h3> \u003Cp >기존 방식과 정반대로, 확인할 지역과 인접 지역에 지뢰가 매설된 지역이 있는지를 확인해 안전한 지역의 수를 구하는 방식으로 변경했습니다.\n이를 통해 코드를 더 직관적으로 개선할 수 있었고, 불필요하게 많은 배열 수정 및 접근 횟수를 줄일 수 있었습니다.\u003C/p> \u003Cpre class=\"language-javascript\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-javascript\">\u003Cspan class=\"token keyword\">function\u003C/span> \u003Cspan class=\"token function\">solution\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">board\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n  \u003Cspan class=\"token comment\">//board는 n*n의 배열이기 때문에 n을 구함\u003C/span>\n  \u003Cspan class=\"token keyword\">const\u003C/span> n \u003Cspan class=\"token operator\">=\u003C/span> board\u003Cspan class=\"token punctuation\">.\u003C/span>length\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n  \u003Cspan class=\"token comment\">//주어진 지역이 안전한 지역인지 확인하는 함수\u003C/span>\n  \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">isSafe\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">x\u003Cspan class=\"token punctuation\">,\u003C/span> y\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \u003Cspan class=\"token keyword\">const\u003C/span> \u003Cspan class=\"token function-variable function\">range\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">k\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">=>\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>k \u003Cspan class=\"token operator\">-\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> k\u003Cspan class=\"token punctuation\">,\u003C/span> k \u003Cspan class=\"token operator\">+\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n    \u003Cspan class=\"token comment\">//범위 내에 지뢰가 매설된 지역이 존재하면 false를 반환\u003C/span>\n    \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">const\u003C/span> ry \u003Cspan class=\"token keyword\">of\u003C/span> \u003Cspan class=\"token function\">range\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>y\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n      \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">const\u003C/span> rx \u003Cspan class=\"token keyword\">of\u003C/span> \u003Cspan class=\"token function\">range\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>x\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n        \u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>board\u003Cspan class=\"token punctuation\">[\u003C/span>ry\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token operator\">?.\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>rx\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n          \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">false\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n        \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n      \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n    \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n    \u003Cspan class=\"token comment\">//주변 지역이 모두 빈 지역이면 true를 반환\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">true\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n  \u003Cspan class=\"token comment\">//모든 지역을 순회하여 안전한 지역의 수를 구해 반환\u003C/span>\n  \u003Cspan class=\"token keyword\">let\u003C/span> answer \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n  \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">let\u003C/span> y \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> y \u003Cspan class=\"token operator\">&lt;\u003C/span> n\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token operator\">++\u003C/span>y\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">let\u003C/span> x \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> x \u003Cspan class=\"token operator\">&lt;\u003C/span> n\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token operator\">++\u003C/span>x\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n      answer \u003Cspan class=\"token operator\">+=\u003C/span> \u003Cspan class=\"token function\">isSafe\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>x\u003Cspan class=\"token punctuation\">,\u003C/span> y\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n    \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n  \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n  \u003Cspan class=\"token keyword\">return\u003C/span> answer\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Cp >문제에서 0은 안전한 지역이 아니라 지뢰가 매설되지 않은 지역을 의미하기 때문에 이 풀이가 더 자연스러운 것 같습니다.\n\u003Cdel>처음에 왜 저렇게 풀었지..\u003C/del>\u003C/p> \u003Chr> \u003Ch2 >숏코딩 (CodeGolf)\u003C/h2> \u003Cp >조금 더 코드를 간결하게 바꾸어 아래와 같이 정리할 수 있습니다.\u003C/p> \u003Cpre class=\"language-c\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-c\">solution\u003Cspan class=\"token operator\">=\u003C/span>_\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token operator\">>\u003C/span>_\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">flatMap\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>r\u003Cspan class=\"token punctuation\">,\u003C/span>y\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token operator\">>\u003C/span>r\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">map\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>v\u003Cspan class=\"token punctuation\">,\u003C/span>x\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token operator\">>\u003C/span>\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\u003Cspan class=\"token keyword\">for\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>i\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token operator\">-\u003C/span>\u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>i\u003Cspan class=\"token operator\">&lt;\u003C/span>\u003Cspan class=\"token number\">2\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\u003Cspan class=\"token operator\">++\u003C/span>i\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token keyword\">for\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>j\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token operator\">-\u003C/span>\u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>j\u003Cspan class=\"token operator\">&lt;\u003C/span>\u003Cspan class=\"token number\">2\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\u003Cspan class=\"token operator\">++\u003C/span>j\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token keyword\">if\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>_\u003Cspan class=\"token punctuation\">[\u003C/span>y\u003Cspan class=\"token operator\">+\u003C/span>i\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token operator\">?\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>x\u003Cspan class=\"token operator\">+\u003C/span>j\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">filter\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>v\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token operator\">>\u003C/span>v\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>length\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>",[6,7],"알고리즘","프로그래머스"],"uses":{"params":["permalink"]}}]}

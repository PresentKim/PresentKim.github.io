{"type":"data","nodes":[null,{"type":"data","data":[{"title":1,"summary":2,"formattedDate":3,"content":4,"tags":5},"🏅 프로그래머스 120956 : 옹알이 - Javascript","프로그래머스 120956 : 옹알이  문제를 Javascript로 풀이한 내용입니다.","2023-02-04","\u003Ch2 >문제 설명\u003C/h2> \u003Cul >\u003Cli>출처: \u003Ca href=\"https://school.programmers.co.kr/learn/courses/30/lessons/120956\" rel=\"noopener noreferrer\" target=\"_blank\">프로그래머스 120956 : 옹알이\u003C/a>\u003C/li>\u003C/ul> \u003Cp >머쓱이는 태어난 지 6개월 된 조카를 돌보고 있습니다. 조카는 아직 “aya”, “ye”, “woo”, “ma” 네 가지 발음을 최대 한 번씩 사용해 조합한(이어 붙인) 발음밖에 하지 못합니다. 문자열 배열 \u003Ccode>babbling\u003C/code>이 매개변수로 주어질 때, 머쓱이의 조카가 발음할 수 있는 단어의 개수를 return하도록 solution 함수를 완성해주세요.\u003C/p> \u003Chr> \u003Ch2 >제한사항\u003C/h2> \u003Cul >\u003Cli>\u003C/li> \u003Cli>1 ≤ \u003Ccode>babbling\u003C/code>의 길이 ≤ 100\u003C/li> \u003Cli>1 ≤ \u003Ccode>babbling[i]\u003C/code>의 길이 ≤ 15\u003C/li> \u003Cli>\u003Ccode>babbling\u003C/code>의 각 문자열에서 “aya”, “ye”, “woo”, “ma”는 각각 최대 한 번씩만 등장합니다.\u003Cul>\u003Cli>즉, 각 문자열의 가능한 모든 부분 문자열 중에서 “aya”, “ye”, “woo”, “ma”가 한 번씩만 등장합니다.\u003C/li>\u003C/ul>\u003C/li> \u003Cli>문자열은 알파벳 소문자로만 이루어져 있습니다.\u003C/li>\u003C/ul> \u003Chr> \u003Ch2 >입출력 예\u003C/h2> \u003Ctable >\u003Cthead>\u003Ctr>\u003Cth align=\"left\">babbling\u003C/th> \u003Cth align=\"left\">result\u003C/th>\u003C/tr>\u003C/thead> \u003Ctbody>\u003Ctr>\u003Ctd align=\"left\">[“aya”, “yee”, “u”, “maa”, “wyeoo”]\u003C/td> \u003Ctd align=\"left\">1\u003C/td>\u003C/tr> \u003Ctr>\u003Ctd align=\"left\">[“ayaye”, “uuuma”, “ye”, “yemawoo”, “ayaa”]\u003C/td> \u003Ctd align=\"left\">3\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table> \u003Cul >\u003Cli>\u003Cp>예제 #1\u003Cbr>\n[“aya”, “yee”, “u”, “maa”, “wyeoo”]에서 발음할 수 있는 것은 “aya”뿐입니다. 따라서 1을 return합니다\u003C/p>\u003C/li> \u003Cli>\u003Cp>예제 #2\u003Cbr>\n[“ayaye”, “uuuma”, “ye”, “yemawoo”, “ayaa”]에서 발음할 수 있는 것은 “aya” + “ye” = “ayaye”, “ye”, “ye” + “ma” + “woo” = “yemawoo”로 3개입니다. 따라서 3을 return합니다.\u003C/p>\u003C/li>\u003C/ul> \u003Chr> \u003Ch2 >유의사항\u003C/h2> \u003Cp >네 가지를 붙여 만들 수 있는 발음 이외에는 어떤 발음도 할 수 없는 것으로 규정합니다.\n예를 들어 “woowo”는 “woo”는 발음할 수 있지만 “wo”를 발음할 수 없기 때문에 할 수 없는 발음입니다.\u003C/p> \u003Chr> \u003Ch2 >풀이 과정\u003C/h2> \u003Cp >그냥 보이는 대로 발음 가능한 단어를 제거하는 방식을 사용하면 예제에 있는 “wyeoo”를 처리할 때 “ye”를 제거하고, 그 다음 “woo”를 제거해 발음이 가능하다고 처리하기 때문에 단어를 유지한 채로 모두 발음이 가능한지 확인해야합니다.\u003C/p> \u003Cp >제가 생각한 해결 방법은 단어는 그대로 두고, 단어의 길이만 구해서 발음이 가능할 경우 길이를 줄여 길이가 0이 되면 발음이 가능한 단어라고 처리하는 것입니다.\n문제 조건 중 모든 발음은 한번씩만 가능하다고 했기 때문에 여러번 포함되는 경우는 생각하지 않아도 됩니다.\u003C/p> \u003Cpre class=\"language-javascript\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-javascript\">\u003Cspan class=\"token comment\">//조카가 가능한 발음 목록\u003C/span>\n\u003Cspan class=\"token keyword\">const\u003C/span> pronunciations \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token string\">'aya'\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token string\">'ye'\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token string\">'woo'\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token string\">'ma'\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n\u003Cspan class=\"token keyword\">function\u003C/span> \u003Cspan class=\"token function\">solution\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">babbling\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n  \u003Cspan class=\"token keyword\">let\u003C/span> answer \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n  \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">const\u003C/span> word \u003Cspan class=\"token keyword\">of\u003C/span> babbling\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \u003Cspan class=\"token comment\">//남은 단어의 길이\u003C/span>\n    \u003Cspan class=\"token keyword\">let\u003C/span> remain \u003Cspan class=\"token operator\">=\u003C/span> word\u003Cspan class=\"token punctuation\">.\u003C/span>length\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n    \u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">const\u003C/span> pronunce \u003Cspan class=\"token keyword\">of\u003C/span> pronunciations\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n      \u003Cspan class=\"token comment\">//가능한 발음이 포함되면 해당 발음의 길이만큼 남은 길이를 줄임\u003C/span>\n      \u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>word\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">includes\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>pronunce\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n        remain \u003Cspan class=\"token operator\">-=\u003C/span> pronunce\u003Cspan class=\"token punctuation\">.\u003C/span>length\u003Cspan class=\"token punctuation\">;\u003C/span>\n      \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n    \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n    \u003Cspan class=\"token comment\">//남은 길이가 없으면 발음 가능한 단어\u003C/span>\n    \u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>remain \u003Cspan class=\"token operator\">===\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n      answer\u003Cspan class=\"token operator\">++\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n    \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n  \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n  \u003Cspan class=\"token keyword\">return\u003C/span> answer\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>",[6,7],"알고리즘","프로그래머스"],"uses":{"params":["permalink"]}}]}

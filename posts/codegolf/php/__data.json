{"type":"data","nodes":[null,{"type":"data","data":[{"title":1,"summary":2,"formattedDate":3,"content":4,"tags":5},"PHP로 숏코딩 하기","PHP에서 사용 가능한 여러 숏코딩 방식을 서술합니다","2022-11-09","\u003Ch2 >01. 출력 짧게하기\u003C/h2> \u003Cp >PHP에선 콘솔에 문자를 출력할 수 있는 다양한 방법이 있다.\u003C/p> \u003Col >\u003Cli>키워드: \u003Ccode>echo\u003C/code>, \u003Ccode>print\u003C/code> \u003Cstrong>(함수가 아니라 키워드입니다)\u003C/strong>\u003C/li> \u003Cli>함수: \u003Ccode>print_r\u003C/code>, \u003Ccode>sprintf\u003C/code>, \u003Ccode>vprintf\u003C/code>, \u003Ccode>vsprintf\u003C/code>, …\u003C/li>\u003C/ol> \u003Cp >이 중 주로 사용되는 것은 값을 그대로 출력하는 \u003Ccode>echo\u003C/code>와 \u003Ccode>print\u003C/code> 키워드이다.\u003C/p> \u003Cblockquote>\u003Cp >이 두 키워드를 함수로 오해하여 \u003Ccode>()\u003C/code>를 붙여 사용하는 경우도 있지만 키워드이기 때문에 \u003Ccode>()\u003C/code>가 불필요하다.\u003C/p> \u003Cpre class=\"language-php\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-php\">\u003Cspan class=\"token keyword\">echo\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string double-quoted-string\">\"Hello World!\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token comment\">//정상 출력\u003C/span>\n\u003Cspan class=\"token keyword\">echo\u003C/span> \u003Cspan class=\"token string double-quoted-string\">\"Hello World!\"\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token comment\">//정상 출력\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/blockquote> \u003Cp >하지만 두 키워드의 작동 방식에는 몇가지 차이점이 있다.\u003Cbr> \u003Ccode>echo\u003C/code>는 여러 개의 값을 출력할 수 있고, \u003Ccode>print\u003C/code>는 한 개의 값을 출력할 수 있다.\u003C/p> \u003Cpre class=\"language-php\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-php\">\n\u003Cspan class=\"token comment\">## 입력\u003C/span>\n\n없음\n\n\u003Cspan class=\"token comment\">## 출력\u003C/span>\n\nHello World\u003Cspan class=\"token operator\">!\u003C/span>를 출력하시오\u003Cspan class=\"token operator\">.\u003C/span>\n\n\u003Cspan class=\"token string backtick-quoted-string\">&#96;&#96;\u003C/span>&#96;예제\u003Cspan class=\"token constant\">_\u003C/span>입력\n\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Cpre class=\"language-예제_출력\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-예제_출력\">Hello World!\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Ch2 >알고리즘 분류\u003C/h2> \u003Cul >\u003Cli>구현\u003C/li>\u003C/ul> \u003Chr> \u003Ch2 >풀이\u003C/h2> \u003Cp >단순히 Hello World! 를 출력하면 된다\u003C/p> \u003Cpre class=\"language-php\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-php\">\u003Cspan class=\"token php language-php\">\u003Cspan class=\"token delimiter important\">&lt;?\u003C/span> \u003Cspan class=\"token keyword\">echo\u003C/span> \u003Cspan class=\"token string double-quoted-string\">\"Hello World!\"\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Cblockquote>\u003Cp >사실 php는 \u003Ccode>&lt;?\u003C/code> 태그로 열지 않으면 문자 그대로 출력하기 때문에 아래 코드도 정답으로 처리된다\u003C/p> \u003Cpre class=\"language-php\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-php\">Hello World\u003Cspan class=\"token operator\">!\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/blockquote> \u003Cpre class=\"language-c++\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-c++\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() &#123;\n    cout &lt;&lt; &quot;Hello World!&quot;;\n    return 0;\n&#125;\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Cpre class=\"language-javascript\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-javascript\">console\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"Hello World!\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>",[6,7],"php","codegolf"],"uses":{"params":["permalink"]}}]}

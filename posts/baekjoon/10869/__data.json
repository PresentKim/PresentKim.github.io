{"type":"data","nodes":[null,{"type":"data","data":[{"title":1,"summary":2,"formattedDate":3,"content":4,"tags":5},"🏅 백준 10869 : 사칙연산 (C++, PHP, Javascript)","백준 10869 : 사칙연산 문제를 C++, PHP, Javascript로 풀이한 내용입니다.","2022-11-09","\u003Ch2 >문제\u003C/h2> \u003Cp >두 자연수 A와 B가 주어진다. 이때, A+B, A-B, A*B, A/B(몫), A%B(나머지)를 출력하는 프로그램을 작성하시오.\u003C/p> \u003Ch2 >입력\u003C/h2> \u003Cp >두 자연수 A와 B가 주어진다. (1 ≤ A, B ≤ 10,000)\u003C/p> \u003Ch2 >출력\u003C/h2> \u003Cp >첫째 줄에 A+B, 둘째 줄에 A-B, 셋째 줄에 A*B, 넷째 줄에 A/B, 다섯째 줄에 A%B를 출력한다.\u003C/p> \u003Cdiv class=\"admonition admonition-boj-input\" >\u003Cdiv class=\"admonition-heading\">\u003Ch5>\u003Cspan class=\"admonition-icon\">\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\u003Cpath class=\"outlined\" d=\"M4,12 14,12M11,8 14,12 11,16M17,5 19,5 19,19 17,19\">\u003C/path>\u003C/svg>\u003C/span>예제 입력\u003C/h5>\u003C/div>\u003Cdiv class=\"admonition-content\">\u003Cp>7 3\u003C/p>\u003C/div>\u003C/div> \u003Cdiv class=\"admonition admonition-boj-input\" >\u003Cdiv class=\"admonition-heading\">\u003Ch5>\u003Cspan class=\"admonition-icon\">\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\u003Cpath class=\"outlined\" d=\"M4,12 14,12M11,8 14,12 11,16M17,5 19,5 19,19 17,19\">\u003C/path>\u003C/svg>\u003C/span>예제 출력\u003C/h5>\u003C/div>\u003Cdiv class=\"admonition-content\">\u003Cp>10\n4\n21\n2\n1\u003C/p>\u003C/div>\u003C/div> \u003Ch2 >알고리즘 분류\u003C/h2> \u003Cul >\u003Cli>수학\u003C/li> \u003Cli>구현\u003C/li> \u003Cli>사칙연산\u003C/li>\u003C/ul> \u003Chr> \u003Ch2 >풀이\u003C/h2> \u003Cp >한줄로 입력된 두 숫자를 구하고 결과를 출력한다\u003C/p> \u003Cdiv class=\"admonition admonition-boj-code\">\u003Cdiv class=\"admonition-heading\" >\u003Ch5>\u003Cspan class=\"admonition-icon\">\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\u003Cpath class=\"outlined\" d=\"M8,6 3,12 8,18M16,6 21,12 16,18\">\u003C/path>\u003C/svg>\u003C/span>PHP\u003C/h5>\u003C/div>\u003Cdiv class=\"admonition-content\">\u003Cpre class=\"language-php\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-php\">\u003Cspan class=\"token php language-php\">\u003Cspan class=\"token delimiter important\">&lt;?\u003C/span>\n\u003Cspan class=\"token function\">fscanf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token constant\">STDIN\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token string double-quoted-string\">\"%d%d\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token variable\">$a\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token variable\">$b\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token keyword\">echo\u003C/span> \u003Cspan class=\"token variable\">$a\u003C/span> \u003Cspan class=\"token operator\">+\u003C/span> \u003Cspan class=\"token variable\">$b\u003C/span> \u003Cspan class=\"token operator\">.\u003C/span> \u003Cspan class=\"token constant\">PHP_EOL\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token keyword\">echo\u003C/span> \u003Cspan class=\"token variable\">$a\u003C/span> \u003Cspan class=\"token operator\">-\u003C/span> \u003Cspan class=\"token variable\">$b\u003C/span> \u003Cspan class=\"token operator\">.\u003C/span> \u003Cspan class=\"token constant\">PHP_EOL\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token keyword\">echo\u003C/span> \u003Cspan class=\"token variable\">$a\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span> \u003Cspan class=\"token variable\">$b\u003C/span> \u003Cspan class=\"token operator\">.\u003C/span> \u003Cspan class=\"token constant\">PHP_EOL\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token keyword\">echo\u003C/span> \u003Cspan class=\"token function\">intdiv\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token variable\">$a\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token variable\">$b\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">.\u003C/span> \u003Cspan class=\"token constant\">PHP_EOL\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token keyword\">echo\u003C/span> \u003Cspan class=\"token variable\">$a\u003C/span> \u003Cspan class=\"token operator\">%\u003C/span> \u003Cspan class=\"token variable\">$b\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/div>\u003C/div> \u003Cdiv class=\"admonition admonition-boj-code\">\u003Cdiv class=\"admonition-heading\" >\u003Ch5>\u003Cspan class=\"admonition-icon\">\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\u003Cpath class=\"outlined\" d=\"M8,6 3,12 8,18M16,6 21,12 16,18\">\u003C/path>\u003C/svg>\u003C/span>CPP\u003C/h5>\u003C/div>\u003Cdiv class=\"admonition-content\">\u003Cpre class=\"language-cpp\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-cpp\">\u003Cspan class=\"token macro property\">\u003Cspan class=\"token directive-hash\">#\u003C/span>\u003Cspan class=\"token directive keyword\">include\u003C/span> \u003Cspan class=\"token string\">&lt;ios>\u003C/span>\u003C/span>\n\n\u003Cspan class=\"token keyword\">int\u003C/span> \u003Cspan class=\"token function\">main\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \u003Cspan class=\"token keyword\">int\u003C/span> a\u003Cspan class=\"token punctuation\">,\u003C/span> b\u003Cspan class=\"token punctuation\">;\u003C/span>\n    \u003Cspan class=\"token function\">scanf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"%d %d\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>a\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>b\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n    \u003Cspan class=\"token function\">printf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"%d&#92;n%d&#92;n%d&#92;n%d&#92;n%d\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> a \u003Cspan class=\"token operator\">+\u003C/span> b\u003Cspan class=\"token punctuation\">,\u003C/span> a \u003Cspan class=\"token operator\">-\u003C/span> b\u003Cspan class=\"token punctuation\">,\u003C/span> a \u003Cspan class=\"token operator\">*\u003C/span> b\u003Cspan class=\"token punctuation\">,\u003C/span> a \u003Cspan class=\"token operator\">/\u003C/span> b\u003Cspan class=\"token punctuation\">,\u003C/span> a \u003Cspan class=\"token operator\">%\u003C/span> b\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/div>\u003C/div> \u003Ch2 >숏코딩 풀이\u003C/h2> \u003Cp >더 코드를 줄일 방법이 생각나지 앉아서 그냥 공백만 제거했다\u003C/p> \u003Cdiv class=\"admonition admonition-boj-code\">\u003Cdiv class=\"admonition-heading\" >\u003Ch5>\u003Cspan class=\"admonition-icon\">\u003Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\u003Cpath class=\"outlined\" d=\"M8,6 3,12 8,18M16,6 21,12 16,18\">\u003C/path>\u003C/svg>\u003C/span>PHP\u003C/h5>\u003C/div>\u003Cdiv class=\"admonition-content\">\u003Cpre class=\"language-php\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-php\">\u003Cspan class=\"token php language-php\">\u003Cspan class=\"token delimiter important\">&lt;?\u003C/span>\u003Cspan class=\"token function\">fscanf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token constant\">STDIN\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\u003Cspan class=\"token string double-quoted-string\">\"%d%d\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\u003Cspan class=\"token variable\">$a\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\u003Cspan class=\"token variable\">$b\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\u003Cspan class=\"token function\">printf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string double-quoted-string\">\"%d\n%d\n%d\n%d\n%d\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\u003Cspan class=\"token variable\">$a\u003C/span>\u003Cspan class=\"token operator\">+\u003C/span>\u003Cspan class=\"token variable\">$b\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\u003Cspan class=\"token variable\">$a\u003C/span>\u003Cspan class=\"token operator\">-\u003C/span>\u003Cspan class=\"token variable\">$b\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\u003Cspan class=\"token variable\">$a\u003C/span>\u003Cspan class=\"token operator\">*\u003C/span>\u003Cspan class=\"token variable\">$b\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\u003Cspan class=\"token variable\">$a\u003C/span>\u003Cspan class=\"token operator\">/\u003C/span>\u003Cspan class=\"token variable\">$b\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\u003Cspan class=\"token variable\">$a\u003C/span>\u003Cspan class=\"token operator\">%\u003C/span>\u003Cspan class=\"token variable\">$b\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/div>\u003C/div>",[6,7],"백준","알고리즘"],"uses":{"params":["permalink"]}}]}
